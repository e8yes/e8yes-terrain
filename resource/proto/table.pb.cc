// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

#include "table.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceTable_Metadata_table_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_table_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto;
namespace e8 {
class ResourceTable_MetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_Metadata> _instance;
} _ResourceTable_Metadata_default_instance_;
class ResourceTable_GeometriesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_GeometriesEntry_DoNotUse> _instance;
} _ResourceTable_GeometriesEntry_DoNotUse_default_instance_;
class ResourceTable_MaterialsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_MaterialsEntry_DoNotUse> _instance;
} _ResourceTable_MaterialsEntry_DoNotUse_default_instance_;
class ResourceTable_LightMapsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_LightMapsEntry_DoNotUse> _instance;
} _ResourceTable_LightMapsEntry_DoNotUse_default_instance_;
class ResourceTable_IndirectLightMapsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_IndirectLightMapsEntry_DoNotUse> _instance;
} _ResourceTable_IndirectLightMapsEntry_DoNotUse_default_instance_;
class ResourceTable_PhysicalShapesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable_PhysicalShapesEntry_DoNotUse> _instance;
} _ResourceTable_PhysicalShapesEntry_DoNotUse_default_instance_;
class ResourceTableDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceTable> _instance;
} _ResourceTable_default_instance_;
}  // namespace e8
static void InitDefaultsscc_info_ResourceTable_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_default_instance_;
    new (ptr) ::e8::ResourceTable();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ResourceTable::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ResourceTable_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ResourceTable_table_2eproto}, {
      &scc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto.base,
      &scc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto.base,
      &scc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto.base,
      &scc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto.base,
      &scc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto.base,}};

static void InitDefaultsscc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_GeometriesEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::ResourceTable_GeometriesEntry_DoNotUse();
  }
  ::e8::ResourceTable_GeometriesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto}, {
      &scc_info_ResourceTable_Metadata_table_2eproto.base,}};

static void InitDefaultsscc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_IndirectLightMapsEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse();
  }
  ::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto}, {
      &scc_info_ResourceTable_Metadata_table_2eproto.base,}};

static void InitDefaultsscc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_LightMapsEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::ResourceTable_LightMapsEntry_DoNotUse();
  }
  ::e8::ResourceTable_LightMapsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto}, {
      &scc_info_ResourceTable_Metadata_table_2eproto.base,}};

static void InitDefaultsscc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_MaterialsEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::ResourceTable_MaterialsEntry_DoNotUse();
  }
  ::e8::ResourceTable_MaterialsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto}, {
      &scc_info_ResourceTable_Metadata_table_2eproto.base,}};

static void InitDefaultsscc_info_ResourceTable_Metadata_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_Metadata_default_instance_;
    new (ptr) ::e8::ResourceTable_Metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ResourceTable_Metadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceTable_Metadata_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResourceTable_Metadata_table_2eproto}, {}};

static void InitDefaultsscc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ResourceTable_PhysicalShapesEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse();
  }
  ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto}, {
      &scc_info_ResourceTable_Metadata_table_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_table_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_table_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_table_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_table_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_Metadata, file_name_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_Metadata, resource_size_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_Metadata, temporary_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_GeometriesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_GeometriesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_GeometriesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_GeometriesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_MaterialsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_MaterialsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_MaterialsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_MaterialsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_LightMapsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_LightMapsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_LightMapsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_LightMapsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_PhysicalShapesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_PhysicalShapesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_PhysicalShapesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable_PhysicalShapesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, current_base_path_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, geometries_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, materials_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, light_maps_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, indirect_light_maps_),
  PROTOBUF_FIELD_OFFSET(::e8::ResourceTable, physical_shapes_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::ResourceTable_Metadata)},
  { 8, 15, sizeof(::e8::ResourceTable_GeometriesEntry_DoNotUse)},
  { 17, 24, sizeof(::e8::ResourceTable_MaterialsEntry_DoNotUse)},
  { 26, 33, sizeof(::e8::ResourceTable_LightMapsEntry_DoNotUse)},
  { 35, 42, sizeof(::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse)},
  { 44, 51, sizeof(::e8::ResourceTable_PhysicalShapesEntry_DoNotUse)},
  { 53, -1, sizeof(::e8::ResourceTable)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_Metadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_GeometriesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_MaterialsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_LightMapsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_IndirectLightMapsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_PhysicalShapesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_ResourceTable_default_instance_),
};

const char descriptor_table_protodef_table_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013table.proto\022\002e8\"\260\006\n\rResourceTable\022\031\n\021c"
  "urrent_base_path\030\001 \001(\t\0225\n\ngeometries\030\002 \003"
  "(\0132!.e8.ResourceTable.GeometriesEntry\0223\n"
  "\tmaterials\030\003 \003(\0132 .e8.ResourceTable.Mate"
  "rialsEntry\0224\n\nlight_maps\030\004 \003(\0132 .e8.Reso"
  "urceTable.LightMapsEntry\022E\n\023indirect_lig"
  "ht_maps\030\005 \003(\0132(.e8.ResourceTable.Indirec"
  "tLightMapsEntry\022>\n\017physical_shapes\030\006 \003(\013"
  "2%.e8.ResourceTable.PhysicalShapesEntry\032"
  "G\n\010Metadata\022\021\n\tfile_name\030\001 \001(\t\022\025\n\rresour"
  "ce_size\030\002 \001(\003\022\021\n\ttemporary\030\003 \001(\010\032M\n\017Geom"
  "etriesEntry\022\013\n\003key\030\001 \001(\003\022)\n\005value\030\002 \001(\0132"
  "\032.e8.ResourceTable.Metadata:\0028\001\032L\n\016Mater"
  "ialsEntry\022\013\n\003key\030\001 \001(\003\022)\n\005value\030\002 \001(\0132\032."
  "e8.ResourceTable.Metadata:\0028\001\032L\n\016LightMa"
  "psEntry\022\013\n\003key\030\001 \001(\003\022)\n\005value\030\002 \001(\0132\032.e8"
  ".ResourceTable.Metadata:\0028\001\032T\n\026IndirectL"
  "ightMapsEntry\022\013\n\003key\030\001 \001(\003\022)\n\005value\030\002 \001("
  "\0132\032.e8.ResourceTable.Metadata:\0028\001\032Q\n\023Phy"
  "sicalShapesEntry\022\013\n\003key\030\001 \001(\003\022)\n\005value\030\002"
  " \001(\0132\032.e8.ResourceTable.Metadata:\0028\001b\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_table_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_table_2eproto_sccs[7] = {
  &scc_info_ResourceTable_table_2eproto.base,
  &scc_info_ResourceTable_GeometriesEntry_DoNotUse_table_2eproto.base,
  &scc_info_ResourceTable_IndirectLightMapsEntry_DoNotUse_table_2eproto.base,
  &scc_info_ResourceTable_LightMapsEntry_DoNotUse_table_2eproto.base,
  &scc_info_ResourceTable_MaterialsEntry_DoNotUse_table_2eproto.base,
  &scc_info_ResourceTable_Metadata_table_2eproto.base,
  &scc_info_ResourceTable_PhysicalShapesEntry_DoNotUse_table_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_table_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_table_2eproto = {
  false, false, descriptor_table_protodef_table_2eproto, "table.proto", 844,
  &descriptor_table_table_2eproto_once, descriptor_table_table_2eproto_sccs, descriptor_table_table_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_table_2eproto::offsets,
  file_level_metadata_table_2eproto, 7, file_level_enum_descriptors_table_2eproto, file_level_service_descriptors_table_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_table_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_table_2eproto)), true);
namespace e8 {

// ===================================================================

void ResourceTable_Metadata::InitAsDefaultInstance() {
}
class ResourceTable_Metadata::_Internal {
 public:
};

ResourceTable_Metadata::ResourceTable_Metadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.ResourceTable.Metadata)
}
ResourceTable_Metadata::ResourceTable_Metadata(const ResourceTable_Metadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_name().empty()) {
    file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_file_name(),
      GetArena());
  }
  ::memcpy(&resource_size_, &from.resource_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&temporary_) -
    reinterpret_cast<char*>(&resource_size_)) + sizeof(temporary_));
  // @@protoc_insertion_point(copy_constructor:e8.ResourceTable.Metadata)
}

void ResourceTable_Metadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceTable_Metadata_table_2eproto.base);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temporary_) -
      reinterpret_cast<char*>(&resource_size_)) + sizeof(temporary_));
}

ResourceTable_Metadata::~ResourceTable_Metadata() {
  // @@protoc_insertion_point(destructor:e8.ResourceTable.Metadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResourceTable_Metadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceTable_Metadata::ArenaDtor(void* object) {
  ResourceTable_Metadata* _this = reinterpret_cast< ResourceTable_Metadata* >(object);
  (void)_this;
}
void ResourceTable_Metadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceTable_Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceTable_Metadata& ResourceTable_Metadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceTable_Metadata_table_2eproto.base);
  return *internal_default_instance();
}


void ResourceTable_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ResourceTable.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&resource_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temporary_) -
      reinterpret_cast<char*>(&resource_size_)) + sizeof(temporary_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceTable_Metadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "e8.ResourceTable.Metadata.file_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 resource_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          resource_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool temporary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          temporary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceTable_Metadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.ResourceTable.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "e8.ResourceTable.Metadata.file_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_name(), target);
  }

  // int64 resource_size = 2;
  if (this->resource_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_resource_size(), target);
  }

  // bool temporary = 3;
  if (this->temporary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_temporary(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ResourceTable.Metadata)
  return target;
}

size_t ResourceTable_Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ResourceTable.Metadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_name());
  }

  // int64 resource_size = 2;
  if (this->resource_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_resource_size());
  }

  // bool temporary = 3;
  if (this->temporary() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceTable_Metadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ResourceTable.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceTable_Metadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceTable_Metadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ResourceTable.Metadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ResourceTable.Metadata)
    MergeFrom(*source);
  }
}

void ResourceTable_Metadata::MergeFrom(const ResourceTable_Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ResourceTable.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {
    _internal_set_file_name(from._internal_file_name());
  }
  if (from.resource_size() != 0) {
    _internal_set_resource_size(from._internal_resource_size());
  }
  if (from.temporary() != 0) {
    _internal_set_temporary(from._internal_temporary());
  }
}

void ResourceTable_Metadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ResourceTable.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceTable_Metadata::CopyFrom(const ResourceTable_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ResourceTable.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceTable_Metadata::IsInitialized() const {
  return true;
}

void ResourceTable_Metadata::InternalSwap(ResourceTable_Metadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResourceTable_Metadata, temporary_)
      + sizeof(ResourceTable_Metadata::temporary_)
      - PROTOBUF_FIELD_OFFSET(ResourceTable_Metadata, resource_size_)>(
          reinterpret_cast<char*>(&resource_size_),
          reinterpret_cast<char*>(&other->resource_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_Metadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ResourceTable_GeometriesEntry_DoNotUse::ResourceTable_GeometriesEntry_DoNotUse() {}
ResourceTable_GeometriesEntry_DoNotUse::ResourceTable_GeometriesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResourceTable_GeometriesEntry_DoNotUse::MergeFrom(const ResourceTable_GeometriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_GeometriesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResourceTable_GeometriesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

ResourceTable_MaterialsEntry_DoNotUse::ResourceTable_MaterialsEntry_DoNotUse() {}
ResourceTable_MaterialsEntry_DoNotUse::ResourceTable_MaterialsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResourceTable_MaterialsEntry_DoNotUse::MergeFrom(const ResourceTable_MaterialsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_MaterialsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResourceTable_MaterialsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

ResourceTable_LightMapsEntry_DoNotUse::ResourceTable_LightMapsEntry_DoNotUse() {}
ResourceTable_LightMapsEntry_DoNotUse::ResourceTable_LightMapsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResourceTable_LightMapsEntry_DoNotUse::MergeFrom(const ResourceTable_LightMapsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_LightMapsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResourceTable_LightMapsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

ResourceTable_IndirectLightMapsEntry_DoNotUse::ResourceTable_IndirectLightMapsEntry_DoNotUse() {}
ResourceTable_IndirectLightMapsEntry_DoNotUse::ResourceTable_IndirectLightMapsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResourceTable_IndirectLightMapsEntry_DoNotUse::MergeFrom(const ResourceTable_IndirectLightMapsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_IndirectLightMapsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResourceTable_IndirectLightMapsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

ResourceTable_PhysicalShapesEntry_DoNotUse::ResourceTable_PhysicalShapesEntry_DoNotUse() {}
ResourceTable_PhysicalShapesEntry_DoNotUse::ResourceTable_PhysicalShapesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResourceTable_PhysicalShapesEntry_DoNotUse::MergeFrom(const ResourceTable_PhysicalShapesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable_PhysicalShapesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResourceTable_PhysicalShapesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ResourceTable::InitAsDefaultInstance() {
}
class ResourceTable::_Internal {
 public:
};

ResourceTable::ResourceTable(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  geometries_(arena),
  materials_(arena),
  light_maps_(arena),
  indirect_light_maps_(arena),
  physical_shapes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.ResourceTable)
}
ResourceTable::ResourceTable(const ResourceTable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  geometries_.MergeFrom(from.geometries_);
  materials_.MergeFrom(from.materials_);
  light_maps_.MergeFrom(from.light_maps_);
  indirect_light_maps_.MergeFrom(from.indirect_light_maps_);
  physical_shapes_.MergeFrom(from.physical_shapes_);
  current_base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_base_path().empty()) {
    current_base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_current_base_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:e8.ResourceTable)
}

void ResourceTable::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceTable_table_2eproto.base);
  current_base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResourceTable::~ResourceTable() {
  // @@protoc_insertion_point(destructor:e8.ResourceTable)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResourceTable::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  current_base_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceTable::ArenaDtor(void* object) {
  ResourceTable* _this = reinterpret_cast< ResourceTable* >(object);
  (void)_this;
}
void ResourceTable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceTable& ResourceTable::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceTable_table_2eproto.base);
  return *internal_default_instance();
}


void ResourceTable::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ResourceTable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  geometries_.Clear();
  materials_.Clear();
  light_maps_.Clear();
  indirect_light_maps_.Clear();
  physical_shapes_.Clear();
  current_base_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceTable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string current_base_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_current_base_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "e8.ResourceTable.current_base_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int64, .e8.ResourceTable.Metadata> geometries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&geometries_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int64, .e8.ResourceTable.Metadata> materials = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&materials_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int64, .e8.ResourceTable.Metadata> light_maps = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&light_maps_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int64, .e8.ResourceTable.Metadata> indirect_light_maps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&indirect_light_maps_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int64, .e8.ResourceTable.Metadata> physical_shapes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&physical_shapes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceTable::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.ResourceTable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string current_base_path = 1;
  if (this->current_base_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_base_path().data(), static_cast<int>(this->_internal_current_base_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "e8.ResourceTable.current_base_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_current_base_path(), target);
  }

  // map<int64, .e8.ResourceTable.Metadata> geometries = 2;
  if (!this->_internal_geometries().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_geometries().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_geometries().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_geometries().begin();
          it != this->_internal_geometries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResourceTable_GeometriesEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_geometries().begin();
          it != this->_internal_geometries().end(); ++it) {
        target = ResourceTable_GeometriesEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  // map<int64, .e8.ResourceTable.Metadata> materials = 3;
  if (!this->_internal_materials().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_materials().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_materials().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResourceTable_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it) {
        target = ResourceTable_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
      }
    }
  }

  // map<int64, .e8.ResourceTable.Metadata> light_maps = 4;
  if (!this->_internal_light_maps().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_light_maps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_light_maps().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_light_maps().begin();
          it != this->_internal_light_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResourceTable_LightMapsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_light_maps().begin();
          it != this->_internal_light_maps().end(); ++it) {
        target = ResourceTable_LightMapsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<int64, .e8.ResourceTable.Metadata> indirect_light_maps = 5;
  if (!this->_internal_indirect_light_maps().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_indirect_light_maps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_indirect_light_maps().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_indirect_light_maps().begin();
          it != this->_internal_indirect_light_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResourceTable_IndirectLightMapsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_indirect_light_maps().begin();
          it != this->_internal_indirect_light_maps().end(); ++it) {
        target = ResourceTable_IndirectLightMapsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  // map<int64, .e8.ResourceTable.Metadata> physical_shapes = 6;
  if (!this->_internal_physical_shapes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_physical_shapes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_physical_shapes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_physical_shapes().begin();
          it != this->_internal_physical_shapes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResourceTable_PhysicalShapesEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
          it = this->_internal_physical_shapes().begin();
          it != this->_internal_physical_shapes().end(); ++it) {
        target = ResourceTable_PhysicalShapesEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ResourceTable)
  return target;
}

size_t ResourceTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ResourceTable)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .e8.ResourceTable.Metadata> geometries = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_geometries_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
      it = this->_internal_geometries().begin();
      it != this->_internal_geometries().end(); ++it) {
    total_size += ResourceTable_GeometriesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .e8.ResourceTable.Metadata> materials = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_materials_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
      it = this->_internal_materials().begin();
      it != this->_internal_materials().end(); ++it) {
    total_size += ResourceTable_MaterialsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .e8.ResourceTable.Metadata> light_maps = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_light_maps_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
      it = this->_internal_light_maps().begin();
      it != this->_internal_light_maps().end(); ++it) {
    total_size += ResourceTable_LightMapsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .e8.ResourceTable.Metadata> indirect_light_maps = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_indirect_light_maps_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
      it = this->_internal_indirect_light_maps().begin();
      it != this->_internal_indirect_light_maps().end(); ++it) {
    total_size += ResourceTable_IndirectLightMapsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .e8.ResourceTable.Metadata> physical_shapes = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_physical_shapes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >::const_iterator
      it = this->_internal_physical_shapes().begin();
      it != this->_internal_physical_shapes().end(); ++it) {
    total_size += ResourceTable_PhysicalShapesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string current_base_path = 1;
  if (this->current_base_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_base_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceTable::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ResourceTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceTable* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceTable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ResourceTable)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ResourceTable)
    MergeFrom(*source);
  }
}

void ResourceTable::MergeFrom(const ResourceTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ResourceTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  geometries_.MergeFrom(from.geometries_);
  materials_.MergeFrom(from.materials_);
  light_maps_.MergeFrom(from.light_maps_);
  indirect_light_maps_.MergeFrom(from.indirect_light_maps_);
  physical_shapes_.MergeFrom(from.physical_shapes_);
  if (from.current_base_path().size() > 0) {
    _internal_set_current_base_path(from._internal_current_base_path());
  }
}

void ResourceTable::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ResourceTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceTable::CopyFrom(const ResourceTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ResourceTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceTable::IsInitialized() const {
  return true;
}

void ResourceTable::InternalSwap(ResourceTable* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  geometries_.Swap(&other->geometries_);
  materials_.Swap(&other->materials_);
  light_maps_.Swap(&other->light_maps_);
  indirect_light_maps_.Swap(&other->indirect_light_maps_);
  physical_shapes_.Swap(&other->physical_shapes_);
  current_base_path_.Swap(&other->current_base_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceTable::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_Metadata* Arena::CreateMaybeMessage< ::e8::ResourceTable_Metadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_Metadata >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_GeometriesEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::ResourceTable_GeometriesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_GeometriesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_MaterialsEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::ResourceTable_MaterialsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_MaterialsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_LightMapsEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::ResourceTable_LightMapsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_LightMapsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_IndirectLightMapsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::ResourceTable* Arena::CreateMaybeMessage< ::e8::ResourceTable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::ResourceTable >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
