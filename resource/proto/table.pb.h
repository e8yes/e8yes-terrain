// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_table_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_table_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_table_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_table_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_table_2eproto;
namespace e8 {
class ResourceTable;
class ResourceTableDefaultTypeInternal;
extern ResourceTableDefaultTypeInternal _ResourceTable_default_instance_;
class ResourceTable_GeometriesEntry_DoNotUse;
class ResourceTable_GeometriesEntry_DoNotUseDefaultTypeInternal;
extern ResourceTable_GeometriesEntry_DoNotUseDefaultTypeInternal _ResourceTable_GeometriesEntry_DoNotUse_default_instance_;
class ResourceTable_LightMapsEntry_DoNotUse;
class ResourceTable_LightMapsEntry_DoNotUseDefaultTypeInternal;
extern ResourceTable_LightMapsEntry_DoNotUseDefaultTypeInternal _ResourceTable_LightMapsEntry_DoNotUse_default_instance_;
class ResourceTable_MaterialsEntry_DoNotUse;
class ResourceTable_MaterialsEntry_DoNotUseDefaultTypeInternal;
extern ResourceTable_MaterialsEntry_DoNotUseDefaultTypeInternal _ResourceTable_MaterialsEntry_DoNotUse_default_instance_;
class ResourceTable_Metadata;
class ResourceTable_MetadataDefaultTypeInternal;
extern ResourceTable_MetadataDefaultTypeInternal _ResourceTable_Metadata_default_instance_;
class ResourceTable_PhysicalShapesEntry_DoNotUse;
class ResourceTable_PhysicalShapesEntry_DoNotUseDefaultTypeInternal;
extern ResourceTable_PhysicalShapesEntry_DoNotUseDefaultTypeInternal _ResourceTable_PhysicalShapesEntry_DoNotUse_default_instance_;
}  // namespace e8
PROTOBUF_NAMESPACE_OPEN
template<> ::e8::ResourceTable* Arena::CreateMaybeMessage<::e8::ResourceTable>(Arena*);
template<> ::e8::ResourceTable_GeometriesEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::ResourceTable_GeometriesEntry_DoNotUse>(Arena*);
template<> ::e8::ResourceTable_LightMapsEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::ResourceTable_LightMapsEntry_DoNotUse>(Arena*);
template<> ::e8::ResourceTable_MaterialsEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::ResourceTable_MaterialsEntry_DoNotUse>(Arena*);
template<> ::e8::ResourceTable_Metadata* Arena::CreateMaybeMessage<::e8::ResourceTable_Metadata>(Arena*);
template<> ::e8::ResourceTable_PhysicalShapesEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::ResourceTable_PhysicalShapesEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace e8 {

// ===================================================================

class ResourceTable_Metadata PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:e8.ResourceTable.Metadata) */ {
 public:
  inline ResourceTable_Metadata() : ResourceTable_Metadata(nullptr) {};
  virtual ~ResourceTable_Metadata();

  ResourceTable_Metadata(const ResourceTable_Metadata& from);
  ResourceTable_Metadata(ResourceTable_Metadata&& from) noexcept
    : ResourceTable_Metadata() {
    *this = ::std::move(from);
  }

  inline ResourceTable_Metadata& operator=(const ResourceTable_Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceTable_Metadata& operator=(ResourceTable_Metadata&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResourceTable_Metadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceTable_Metadata* internal_default_instance() {
    return reinterpret_cast<const ResourceTable_Metadata*>(
               &_ResourceTable_Metadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResourceTable_Metadata& a, ResourceTable_Metadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceTable_Metadata* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceTable_Metadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResourceTable_Metadata* New() const final {
    return CreateMaybeMessage<ResourceTable_Metadata>(nullptr);
  }

  ResourceTable_Metadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResourceTable_Metadata>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResourceTable_Metadata& from);
  void MergeFrom(const ResourceTable_Metadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceTable_Metadata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "e8.ResourceTable.Metadata";
  }
  protected:
  explicit ResourceTable_Metadata(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileNameFieldNumber = 1,
    kResourceSizeFieldNumber = 2,
    kTemporaryFieldNumber = 3,
  };
  // string file_name = 1;
  void clear_file_name();
  const std::string& file_name() const;
  void set_file_name(const std::string& value);
  void set_file_name(std::string&& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  std::string* mutable_file_name();
  std::string* release_file_name();
  void set_allocated_file_name(std::string* file_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_file_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_file_name(
      std::string* file_name);
  private:
  const std::string& _internal_file_name() const;
  void _internal_set_file_name(const std::string& value);
  std::string* _internal_mutable_file_name();
  public:

  // int64 resource_size = 2;
  void clear_resource_size();
  ::PROTOBUF_NAMESPACE_ID::int64 resource_size() const;
  void set_resource_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_resource_size() const;
  void _internal_set_resource_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool temporary = 3;
  void clear_temporary();
  bool temporary() const;
  void set_temporary(bool value);
  private:
  bool _internal_temporary() const;
  void _internal_set_temporary(bool value);
  public:

  // @@protoc_insertion_point(class_scope:e8.ResourceTable.Metadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 resource_size_;
  bool temporary_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_table_2eproto;
};
// -------------------------------------------------------------------

class ResourceTable_GeometriesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_GeometriesEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_GeometriesEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ResourceTable_GeometriesEntry_DoNotUse();
  ResourceTable_GeometriesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ResourceTable_GeometriesEntry_DoNotUse& other);
  static const ResourceTable_GeometriesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ResourceTable_GeometriesEntry_DoNotUse*>(&_ResourceTable_GeometriesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class ResourceTable_MaterialsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_MaterialsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_MaterialsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ResourceTable_MaterialsEntry_DoNotUse();
  ResourceTable_MaterialsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ResourceTable_MaterialsEntry_DoNotUse& other);
  static const ResourceTable_MaterialsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ResourceTable_MaterialsEntry_DoNotUse*>(&_ResourceTable_MaterialsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class ResourceTable_LightMapsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_LightMapsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_LightMapsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ResourceTable_LightMapsEntry_DoNotUse();
  ResourceTable_LightMapsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ResourceTable_LightMapsEntry_DoNotUse& other);
  static const ResourceTable_LightMapsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ResourceTable_LightMapsEntry_DoNotUse*>(&_ResourceTable_LightMapsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[3];
  }

  public:
};

// -------------------------------------------------------------------

class ResourceTable_PhysicalShapesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_PhysicalShapesEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ResourceTable_PhysicalShapesEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ResourceTable_PhysicalShapesEntry_DoNotUse();
  ResourceTable_PhysicalShapesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ResourceTable_PhysicalShapesEntry_DoNotUse& other);
  static const ResourceTable_PhysicalShapesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ResourceTable_PhysicalShapesEntry_DoNotUse*>(&_ResourceTable_PhysicalShapesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class ResourceTable PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:e8.ResourceTable) */ {
 public:
  inline ResourceTable() : ResourceTable(nullptr) {};
  virtual ~ResourceTable();

  ResourceTable(const ResourceTable& from);
  ResourceTable(ResourceTable&& from) noexcept
    : ResourceTable() {
    *this = ::std::move(from);
  }

  inline ResourceTable& operator=(const ResourceTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceTable& operator=(ResourceTable&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResourceTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceTable* internal_default_instance() {
    return reinterpret_cast<const ResourceTable*>(
               &_ResourceTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ResourceTable& a, ResourceTable& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceTable* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceTable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResourceTable* New() const final {
    return CreateMaybeMessage<ResourceTable>(nullptr);
  }

  ResourceTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResourceTable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResourceTable& from);
  void MergeFrom(const ResourceTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceTable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "e8.ResourceTable";
  }
  protected:
  explicit ResourceTable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_table_2eproto);
    return ::descriptor_table_table_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ResourceTable_Metadata Metadata;

  // accessors -------------------------------------------------------

  enum : int {
    kGeometriesFieldNumber = 2,
    kMaterialsFieldNumber = 3,
    kLightMapsFieldNumber = 4,
    kPhysicalShapesFieldNumber = 5,
    kCurrentBasePathFieldNumber = 1,
  };
  // map<int64, .e8.ResourceTable.Metadata> geometries = 2;
  int geometries_size() const;
  private:
  int _internal_geometries_size() const;
  public:
  void clear_geometries();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      _internal_geometries() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      _internal_mutable_geometries();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      geometries() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      mutable_geometries();

  // map<int64, .e8.ResourceTable.Metadata> materials = 3;
  int materials_size() const;
  private:
  int _internal_materials_size() const;
  public:
  void clear_materials();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      _internal_materials() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      _internal_mutable_materials();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      materials() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      mutable_materials();

  // map<int64, .e8.ResourceTable.Metadata> light_maps = 4;
  int light_maps_size() const;
  private:
  int _internal_light_maps_size() const;
  public:
  void clear_light_maps();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      _internal_light_maps() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      _internal_mutable_light_maps();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      light_maps() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      mutable_light_maps();

  // map<int64, .e8.ResourceTable.Metadata> physical_shapes = 5;
  int physical_shapes_size() const;
  private:
  int _internal_physical_shapes_size() const;
  public:
  void clear_physical_shapes();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      _internal_physical_shapes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      _internal_mutable_physical_shapes();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
      physical_shapes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
      mutable_physical_shapes();

  // string current_base_path = 1;
  void clear_current_base_path();
  const std::string& current_base_path() const;
  void set_current_base_path(const std::string& value);
  void set_current_base_path(std::string&& value);
  void set_current_base_path(const char* value);
  void set_current_base_path(const char* value, size_t size);
  std::string* mutable_current_base_path();
  std::string* release_current_base_path();
  void set_allocated_current_base_path(std::string* current_base_path);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_current_base_path();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_current_base_path(
      std::string* current_base_path);
  private:
  const std::string& _internal_current_base_path() const;
  void _internal_set_current_base_path(const std::string& value);
  std::string* _internal_mutable_current_base_path();
  public:

  // @@protoc_insertion_point(class_scope:e8.ResourceTable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ResourceTable_GeometriesEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > geometries_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ResourceTable_MaterialsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > materials_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ResourceTable_LightMapsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > light_maps_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ResourceTable_PhysicalShapesEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > physical_shapes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_base_path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_table_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResourceTable_Metadata

// string file_name = 1;
inline void ResourceTable_Metadata::clear_file_name() {
  file_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ResourceTable_Metadata::file_name() const {
  // @@protoc_insertion_point(field_get:e8.ResourceTable.Metadata.file_name)
  return _internal_file_name();
}
inline void ResourceTable_Metadata::set_file_name(const std::string& value) {
  _internal_set_file_name(value);
  // @@protoc_insertion_point(field_set:e8.ResourceTable.Metadata.file_name)
}
inline std::string* ResourceTable_Metadata::mutable_file_name() {
  // @@protoc_insertion_point(field_mutable:e8.ResourceTable.Metadata.file_name)
  return _internal_mutable_file_name();
}
inline const std::string& ResourceTable_Metadata::_internal_file_name() const {
  return file_name_.Get();
}
inline void ResourceTable_Metadata::_internal_set_file_name(const std::string& value) {
  
  file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ResourceTable_Metadata::set_file_name(std::string&& value) {
  
  file_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:e8.ResourceTable.Metadata.file_name)
}
inline void ResourceTable_Metadata::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:e8.ResourceTable.Metadata.file_name)
}
inline void ResourceTable_Metadata::set_file_name(const char* value,
    size_t size) {
  
  file_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:e8.ResourceTable.Metadata.file_name)
}
inline std::string* ResourceTable_Metadata::_internal_mutable_file_name() {
  
  return file_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ResourceTable_Metadata::release_file_name() {
  // @@protoc_insertion_point(field_release:e8.ResourceTable.Metadata.file_name)
  return file_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResourceTable_Metadata::set_allocated_file_name(std::string* file_name) {
  if (file_name != nullptr) {
    
  } else {
    
  }
  file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:e8.ResourceTable.Metadata.file_name)
}
inline std::string* ResourceTable_Metadata::unsafe_arena_release_file_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:e8.ResourceTable.Metadata.file_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return file_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ResourceTable_Metadata::unsafe_arena_set_allocated_file_name(
    std::string* file_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (file_name != nullptr) {
    
  } else {
    
  }
  file_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      file_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:e8.ResourceTable.Metadata.file_name)
}

// int64 resource_size = 2;
inline void ResourceTable_Metadata::clear_resource_size() {
  resource_size_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResourceTable_Metadata::_internal_resource_size() const {
  return resource_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResourceTable_Metadata::resource_size() const {
  // @@protoc_insertion_point(field_get:e8.ResourceTable.Metadata.resource_size)
  return _internal_resource_size();
}
inline void ResourceTable_Metadata::_internal_set_resource_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  resource_size_ = value;
}
inline void ResourceTable_Metadata::set_resource_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_resource_size(value);
  // @@protoc_insertion_point(field_set:e8.ResourceTable.Metadata.resource_size)
}

// bool temporary = 3;
inline void ResourceTable_Metadata::clear_temporary() {
  temporary_ = false;
}
inline bool ResourceTable_Metadata::_internal_temporary() const {
  return temporary_;
}
inline bool ResourceTable_Metadata::temporary() const {
  // @@protoc_insertion_point(field_get:e8.ResourceTable.Metadata.temporary)
  return _internal_temporary();
}
inline void ResourceTable_Metadata::_internal_set_temporary(bool value) {
  
  temporary_ = value;
}
inline void ResourceTable_Metadata::set_temporary(bool value) {
  _internal_set_temporary(value);
  // @@protoc_insertion_point(field_set:e8.ResourceTable.Metadata.temporary)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ResourceTable

// string current_base_path = 1;
inline void ResourceTable::clear_current_base_path() {
  current_base_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ResourceTable::current_base_path() const {
  // @@protoc_insertion_point(field_get:e8.ResourceTable.current_base_path)
  return _internal_current_base_path();
}
inline void ResourceTable::set_current_base_path(const std::string& value) {
  _internal_set_current_base_path(value);
  // @@protoc_insertion_point(field_set:e8.ResourceTable.current_base_path)
}
inline std::string* ResourceTable::mutable_current_base_path() {
  // @@protoc_insertion_point(field_mutable:e8.ResourceTable.current_base_path)
  return _internal_mutable_current_base_path();
}
inline const std::string& ResourceTable::_internal_current_base_path() const {
  return current_base_path_.Get();
}
inline void ResourceTable::_internal_set_current_base_path(const std::string& value) {
  
  current_base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ResourceTable::set_current_base_path(std::string&& value) {
  
  current_base_path_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:e8.ResourceTable.current_base_path)
}
inline void ResourceTable::set_current_base_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:e8.ResourceTable.current_base_path)
}
inline void ResourceTable::set_current_base_path(const char* value,
    size_t size) {
  
  current_base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:e8.ResourceTable.current_base_path)
}
inline std::string* ResourceTable::_internal_mutable_current_base_path() {
  
  return current_base_path_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ResourceTable::release_current_base_path() {
  // @@protoc_insertion_point(field_release:e8.ResourceTable.current_base_path)
  return current_base_path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResourceTable::set_allocated_current_base_path(std::string* current_base_path) {
  if (current_base_path != nullptr) {
    
  } else {
    
  }
  current_base_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_base_path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:e8.ResourceTable.current_base_path)
}
inline std::string* ResourceTable::unsafe_arena_release_current_base_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:e8.ResourceTable.current_base_path)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return current_base_path_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ResourceTable::unsafe_arena_set_allocated_current_base_path(
    std::string* current_base_path) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (current_base_path != nullptr) {
    
  } else {
    
  }
  current_base_path_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      current_base_path, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:e8.ResourceTable.current_base_path)
}

// map<int64, .e8.ResourceTable.Metadata> geometries = 2;
inline int ResourceTable::_internal_geometries_size() const {
  return geometries_.size();
}
inline int ResourceTable::geometries_size() const {
  return _internal_geometries_size();
}
inline void ResourceTable::clear_geometries() {
  geometries_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::_internal_geometries() const {
  return geometries_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::geometries() const {
  // @@protoc_insertion_point(field_map:e8.ResourceTable.geometries)
  return _internal_geometries();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::_internal_mutable_geometries() {
  return geometries_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::mutable_geometries() {
  // @@protoc_insertion_point(field_mutable_map:e8.ResourceTable.geometries)
  return _internal_mutable_geometries();
}

// map<int64, .e8.ResourceTable.Metadata> materials = 3;
inline int ResourceTable::_internal_materials_size() const {
  return materials_.size();
}
inline int ResourceTable::materials_size() const {
  return _internal_materials_size();
}
inline void ResourceTable::clear_materials() {
  materials_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::_internal_materials() const {
  return materials_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::materials() const {
  // @@protoc_insertion_point(field_map:e8.ResourceTable.materials)
  return _internal_materials();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::_internal_mutable_materials() {
  return materials_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_map:e8.ResourceTable.materials)
  return _internal_mutable_materials();
}

// map<int64, .e8.ResourceTable.Metadata> light_maps = 4;
inline int ResourceTable::_internal_light_maps_size() const {
  return light_maps_.size();
}
inline int ResourceTable::light_maps_size() const {
  return _internal_light_maps_size();
}
inline void ResourceTable::clear_light_maps() {
  light_maps_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::_internal_light_maps() const {
  return light_maps_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::light_maps() const {
  // @@protoc_insertion_point(field_map:e8.ResourceTable.light_maps)
  return _internal_light_maps();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::_internal_mutable_light_maps() {
  return light_maps_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::mutable_light_maps() {
  // @@protoc_insertion_point(field_mutable_map:e8.ResourceTable.light_maps)
  return _internal_mutable_light_maps();
}

// map<int64, .e8.ResourceTable.Metadata> physical_shapes = 5;
inline int ResourceTable::_internal_physical_shapes_size() const {
  return physical_shapes_.size();
}
inline int ResourceTable::physical_shapes_size() const {
  return _internal_physical_shapes_size();
}
inline void ResourceTable::clear_physical_shapes() {
  physical_shapes_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::_internal_physical_shapes() const {
  return physical_shapes_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >&
ResourceTable::physical_shapes() const {
  // @@protoc_insertion_point(field_map:e8.ResourceTable.physical_shapes)
  return _internal_physical_shapes();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::_internal_mutable_physical_shapes() {
  return physical_shapes_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::e8::ResourceTable_Metadata >*
ResourceTable::mutable_physical_shapes() {
  // @@protoc_insertion_point(field_mutable_map:e8.ResourceTable.physical_shapes)
  return _internal_mutable_physical_shapes();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_table_2eproto
