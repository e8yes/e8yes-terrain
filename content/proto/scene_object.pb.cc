// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_object.proto

#include "scene_object.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_entity_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SceneEntityProto_entity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scene_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneObjectProto_scene_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scene_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto;
namespace e8 {
class SceneObjectProto_SceneObjectChildrenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneObjectProto_SceneObjectChildren> _instance;
} _SceneObjectProto_SceneObjectChildren_default_instance_;
class SceneObjectProto_SceneEntityChildrenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneObjectProto_SceneEntityChildren> _instance;
} _SceneObjectProto_SceneEntityChildren_default_instance_;
class SceneObjectProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneObjectProto> _instance;
  const ::e8::SceneObjectProto_SceneObjectChildren* scene_object_children_;
  const ::e8::SceneObjectProto_SceneEntityChildren* scene_entity_children_;
} _SceneObjectProto_default_instance_;
class SceneObjectCollectionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SceneObjectCollection> _instance;
} _SceneObjectCollection_default_instance_;
}  // namespace e8
static void InitDefaultsscc_info_SceneObjectCollection_scene_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SceneObjectCollection_default_instance_;
    new (ptr) ::e8::SceneObjectCollection();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SceneObjectCollection::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneObjectCollection_scene_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneObjectCollection_scene_5fobject_2eproto}, {
      &scc_info_SceneObjectProto_scene_5fobject_2eproto.base,}};

static void InitDefaultsscc_info_SceneObjectProto_scene_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SceneObjectProto_SceneObjectChildren_default_instance_;
    new (ptr) ::e8::SceneObjectProto_SceneObjectChildren();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::e8::_SceneObjectProto_default_instance_;
    new (ptr) ::e8::SceneObjectProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SceneObjectProto_SceneObjectChildren::InitAsDefaultInstance();
  ::e8::SceneObjectProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneObjectProto_scene_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneObjectProto_scene_5fobject_2eproto}, {
      &scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto.base,}};

static void InitDefaultsscc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SceneObjectProto_SceneEntityChildren_default_instance_;
    new (ptr) ::e8::SceneObjectProto_SceneEntityChildren();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SceneObjectProto_SceneEntityChildren::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto}, {
      &scc_info_SceneEntityProto_entity_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scene_5fobject_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_scene_5fobject_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scene_5fobject_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scene_5fobject_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto_SceneObjectChildren, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto_SceneObjectChildren, scene_objects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto_SceneEntityChildren, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto_SceneEntityChildren, scene_entities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, id_),
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, name_),
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, procedural_object_id_),
  offsetof(::e8::SceneObjectProtoDefaultTypeInternal, scene_object_children_),
  offsetof(::e8::SceneObjectProtoDefaultTypeInternal, scene_entity_children_),
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectProto, children_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::SceneObjectCollection, scene_objects_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::SceneObjectProto_SceneObjectChildren)},
  { 6, -1, sizeof(::e8::SceneObjectProto_SceneEntityChildren)},
  { 12, -1, sizeof(::e8::SceneObjectProto)},
  { 23, -1, sizeof(::e8::SceneObjectCollection)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_SceneObjectProto_SceneObjectChildren_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_SceneObjectProto_SceneEntityChildren_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_SceneObjectProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_SceneObjectCollection_default_instance_),
};

const char descriptor_table_protodef_scene_5fobject_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022scene_object.proto\022\002e8\032\014entity.proto\"\365"
  "\002\n\020SceneObjectProto\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030"
  "\002 \001(\t\022\034\n\024procedural_object_id\030\003 \001(\003\022I\n\025s"
  "cene_object_children\030\004 \001(\0132(.e8.SceneObj"
  "ectProto.SceneObjectChildrenH\000\022I\n\025scene_"
  "entity_children\030\005 \001(\0132(.e8.SceneObjectPr"
  "oto.SceneEntityChildrenH\000\032B\n\023SceneObject"
  "Children\022+\n\rscene_objects\030\001 \003(\0132\024.e8.Sce"
  "neObjectProto\032C\n\023SceneEntityChildren\022,\n\016"
  "scene_entities\030\001 \003(\0132\024.e8.SceneEntityPro"
  "toB\n\n\010children\"D\n\025SceneObjectCollection\022"
  "+\n\rscene_objects\030\001 \003(\0132\024.e8.SceneObjectP"
  "rotob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scene_5fobject_2eproto_deps[1] = {
  &::descriptor_table_entity_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scene_5fobject_2eproto_sccs[3] = {
  &scc_info_SceneObjectCollection_scene_5fobject_2eproto.base,
  &scc_info_SceneObjectProto_scene_5fobject_2eproto.base,
  &scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scene_5fobject_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scene_5fobject_2eproto = {
  false, false, descriptor_table_protodef_scene_5fobject_2eproto, "scene_object.proto", 492,
  &descriptor_table_scene_5fobject_2eproto_once, descriptor_table_scene_5fobject_2eproto_sccs, descriptor_table_scene_5fobject_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_scene_5fobject_2eproto::offsets,
  file_level_metadata_scene_5fobject_2eproto, 4, file_level_enum_descriptors_scene_5fobject_2eproto, file_level_service_descriptors_scene_5fobject_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scene_5fobject_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scene_5fobject_2eproto)), true);
namespace e8 {

// ===================================================================

void SceneObjectProto_SceneObjectChildren::InitAsDefaultInstance() {
}
class SceneObjectProto_SceneObjectChildren::_Internal {
 public:
};

SceneObjectProto_SceneObjectChildren::SceneObjectProto_SceneObjectChildren(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scene_objects_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.SceneObjectProto.SceneObjectChildren)
}
SceneObjectProto_SceneObjectChildren::SceneObjectProto_SceneObjectChildren(const SceneObjectProto_SceneObjectChildren& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scene_objects_(from.scene_objects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SceneObjectProto.SceneObjectChildren)
}

void SceneObjectProto_SceneObjectChildren::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneObjectProto_scene_5fobject_2eproto.base);
}

SceneObjectProto_SceneObjectChildren::~SceneObjectProto_SceneObjectChildren() {
  // @@protoc_insertion_point(destructor:e8.SceneObjectProto.SceneObjectChildren)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneObjectProto_SceneObjectChildren::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SceneObjectProto_SceneObjectChildren::ArenaDtor(void* object) {
  SceneObjectProto_SceneObjectChildren* _this = reinterpret_cast< SceneObjectProto_SceneObjectChildren* >(object);
  (void)_this;
}
void SceneObjectProto_SceneObjectChildren::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneObjectProto_SceneObjectChildren::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneObjectProto_SceneObjectChildren& SceneObjectProto_SceneObjectChildren::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneObjectProto_scene_5fobject_2eproto.base);
  return *internal_default_instance();
}


void SceneObjectProto_SceneObjectChildren::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SceneObjectProto.SceneObjectChildren)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_objects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneObjectProto_SceneObjectChildren::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .e8.SceneObjectProto scene_objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scene_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneObjectProto_SceneObjectChildren::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.SceneObjectProto.SceneObjectChildren)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.SceneObjectProto scene_objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scene_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_scene_objects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SceneObjectProto.SceneObjectChildren)
  return target;
}

size_t SceneObjectProto_SceneObjectChildren::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SceneObjectProto.SceneObjectChildren)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .e8.SceneObjectProto scene_objects = 1;
  total_size += 1UL * this->_internal_scene_objects_size();
  for (const auto& msg : this->scene_objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectProto_SceneObjectChildren::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SceneObjectProto.SceneObjectChildren)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectProto_SceneObjectChildren* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneObjectProto_SceneObjectChildren>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SceneObjectProto.SceneObjectChildren)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SceneObjectProto.SceneObjectChildren)
    MergeFrom(*source);
  }
}

void SceneObjectProto_SceneObjectChildren::MergeFrom(const SceneObjectProto_SceneObjectChildren& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SceneObjectProto.SceneObjectChildren)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_objects_.MergeFrom(from.scene_objects_);
}

void SceneObjectProto_SceneObjectChildren::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SceneObjectProto.SceneObjectChildren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectProto_SceneObjectChildren::CopyFrom(const SceneObjectProto_SceneObjectChildren& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SceneObjectProto.SceneObjectChildren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectProto_SceneObjectChildren::IsInitialized() const {
  return true;
}

void SceneObjectProto_SceneObjectChildren::InternalSwap(SceneObjectProto_SceneObjectChildren* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scene_objects_.InternalSwap(&other->scene_objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneObjectProto_SceneObjectChildren::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneObjectProto_SceneEntityChildren::InitAsDefaultInstance() {
}
class SceneObjectProto_SceneEntityChildren::_Internal {
 public:
};

void SceneObjectProto_SceneEntityChildren::clear_scene_entities() {
  scene_entities_.Clear();
}
SceneObjectProto_SceneEntityChildren::SceneObjectProto_SceneEntityChildren(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scene_entities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.SceneObjectProto.SceneEntityChildren)
}
SceneObjectProto_SceneEntityChildren::SceneObjectProto_SceneEntityChildren(const SceneObjectProto_SceneEntityChildren& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scene_entities_(from.scene_entities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SceneObjectProto.SceneEntityChildren)
}

void SceneObjectProto_SceneEntityChildren::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto.base);
}

SceneObjectProto_SceneEntityChildren::~SceneObjectProto_SceneEntityChildren() {
  // @@protoc_insertion_point(destructor:e8.SceneObjectProto.SceneEntityChildren)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneObjectProto_SceneEntityChildren::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SceneObjectProto_SceneEntityChildren::ArenaDtor(void* object) {
  SceneObjectProto_SceneEntityChildren* _this = reinterpret_cast< SceneObjectProto_SceneEntityChildren* >(object);
  (void)_this;
}
void SceneObjectProto_SceneEntityChildren::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneObjectProto_SceneEntityChildren::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneObjectProto_SceneEntityChildren& SceneObjectProto_SceneEntityChildren::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneObjectProto_SceneEntityChildren_scene_5fobject_2eproto.base);
  return *internal_default_instance();
}


void SceneObjectProto_SceneEntityChildren::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SceneObjectProto.SceneEntityChildren)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_entities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneObjectProto_SceneEntityChildren::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .e8.SceneEntityProto scene_entities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scene_entities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneObjectProto_SceneEntityChildren::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.SceneObjectProto.SceneEntityChildren)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.SceneEntityProto scene_entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scene_entities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_scene_entities(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SceneObjectProto.SceneEntityChildren)
  return target;
}

size_t SceneObjectProto_SceneEntityChildren::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SceneObjectProto.SceneEntityChildren)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .e8.SceneEntityProto scene_entities = 1;
  total_size += 1UL * this->_internal_scene_entities_size();
  for (const auto& msg : this->scene_entities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectProto_SceneEntityChildren::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SceneObjectProto.SceneEntityChildren)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectProto_SceneEntityChildren* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneObjectProto_SceneEntityChildren>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SceneObjectProto.SceneEntityChildren)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SceneObjectProto.SceneEntityChildren)
    MergeFrom(*source);
  }
}

void SceneObjectProto_SceneEntityChildren::MergeFrom(const SceneObjectProto_SceneEntityChildren& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SceneObjectProto.SceneEntityChildren)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_entities_.MergeFrom(from.scene_entities_);
}

void SceneObjectProto_SceneEntityChildren::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SceneObjectProto.SceneEntityChildren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectProto_SceneEntityChildren::CopyFrom(const SceneObjectProto_SceneEntityChildren& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SceneObjectProto.SceneEntityChildren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectProto_SceneEntityChildren::IsInitialized() const {
  return true;
}

void SceneObjectProto_SceneEntityChildren::InternalSwap(SceneObjectProto_SceneEntityChildren* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scene_entities_.InternalSwap(&other->scene_entities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneObjectProto_SceneEntityChildren::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneObjectProto::InitAsDefaultInstance() {
  ::e8::_SceneObjectProto_default_instance_.scene_object_children_ = const_cast< ::e8::SceneObjectProto_SceneObjectChildren*>(
      ::e8::SceneObjectProto_SceneObjectChildren::internal_default_instance());
  ::e8::_SceneObjectProto_default_instance_.scene_entity_children_ = const_cast< ::e8::SceneObjectProto_SceneEntityChildren*>(
      ::e8::SceneObjectProto_SceneEntityChildren::internal_default_instance());
}
class SceneObjectProto::_Internal {
 public:
  static const ::e8::SceneObjectProto_SceneObjectChildren& scene_object_children(const SceneObjectProto* msg);
  static const ::e8::SceneObjectProto_SceneEntityChildren& scene_entity_children(const SceneObjectProto* msg);
};

const ::e8::SceneObjectProto_SceneObjectChildren&
SceneObjectProto::_Internal::scene_object_children(const SceneObjectProto* msg) {
  return *msg->children_.scene_object_children_;
}
const ::e8::SceneObjectProto_SceneEntityChildren&
SceneObjectProto::_Internal::scene_entity_children(const SceneObjectProto* msg) {
  return *msg->children_.scene_entity_children_;
}
void SceneObjectProto::set_allocated_scene_object_children(::e8::SceneObjectProto_SceneObjectChildren* scene_object_children) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_children();
  if (scene_object_children) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scene_object_children);
    if (message_arena != submessage_arena) {
      scene_object_children = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scene_object_children, submessage_arena);
    }
    set_has_scene_object_children();
    children_.scene_object_children_ = scene_object_children;
  }
  // @@protoc_insertion_point(field_set_allocated:e8.SceneObjectProto.scene_object_children)
}
void SceneObjectProto::set_allocated_scene_entity_children(::e8::SceneObjectProto_SceneEntityChildren* scene_entity_children) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_children();
  if (scene_entity_children) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scene_entity_children);
    if (message_arena != submessage_arena) {
      scene_entity_children = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scene_entity_children, submessage_arena);
    }
    set_has_scene_entity_children();
    children_.scene_entity_children_ = scene_entity_children;
  }
  // @@protoc_insertion_point(field_set_allocated:e8.SceneObjectProto.scene_entity_children)
}
SceneObjectProto::SceneObjectProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.SceneObjectProto)
}
SceneObjectProto::SceneObjectProto(const SceneObjectProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&procedural_object_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(procedural_object_id_));
  clear_has_children();
  switch (from.children_case()) {
    case kSceneObjectChildren: {
      _internal_mutable_scene_object_children()->::e8::SceneObjectProto_SceneObjectChildren::MergeFrom(from._internal_scene_object_children());
      break;
    }
    case kSceneEntityChildren: {
      _internal_mutable_scene_entity_children()->::e8::SceneObjectProto_SceneEntityChildren::MergeFrom(from._internal_scene_entity_children());
      break;
    }
    case CHILDREN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:e8.SceneObjectProto)
}

void SceneObjectProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneObjectProto_scene_5fobject_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&procedural_object_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(procedural_object_id_));
  clear_has_children();
}

SceneObjectProto::~SceneObjectProto() {
  // @@protoc_insertion_point(destructor:e8.SceneObjectProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneObjectProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_children()) {
    clear_children();
  }
}

void SceneObjectProto::ArenaDtor(void* object) {
  SceneObjectProto* _this = reinterpret_cast< SceneObjectProto* >(object);
  (void)_this;
}
void SceneObjectProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneObjectProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneObjectProto& SceneObjectProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneObjectProto_scene_5fobject_2eproto.base);
  return *internal_default_instance();
}


void SceneObjectProto::clear_children() {
// @@protoc_insertion_point(one_of_clear_start:e8.SceneObjectProto)
  switch (children_case()) {
    case kSceneObjectChildren: {
      if (GetArena() == nullptr) {
        delete children_.scene_object_children_;
      }
      break;
    }
    case kSceneEntityChildren: {
      if (GetArena() == nullptr) {
        delete children_.scene_entity_children_;
      }
      break;
    }
    case CHILDREN_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHILDREN_NOT_SET;
}


void SceneObjectProto::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SceneObjectProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&procedural_object_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(procedural_object_id_));
  clear_children();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneObjectProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "e8.SceneObjectProto.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 procedural_object_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          procedural_object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .e8.SceneObjectProto.SceneObjectChildren scene_object_children = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene_object_children(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .e8.SceneObjectProto.SceneEntityChildren scene_entity_children = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene_entity_children(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneObjectProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.SceneObjectProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "e8.SceneObjectProto.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int64 procedural_object_id = 3;
  if (this->procedural_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_procedural_object_id(), target);
  }

  // .e8.SceneObjectProto.SceneObjectChildren scene_object_children = 4;
  if (_internal_has_scene_object_children()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::scene_object_children(this), target, stream);
  }

  // .e8.SceneObjectProto.SceneEntityChildren scene_entity_children = 5;
  if (_internal_has_scene_entity_children()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::scene_entity_children(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SceneObjectProto)
  return target;
}

size_t SceneObjectProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SceneObjectProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 procedural_object_id = 3;
  if (this->procedural_object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_procedural_object_id());
  }

  switch (children_case()) {
    // .e8.SceneObjectProto.SceneObjectChildren scene_object_children = 4;
    case kSceneObjectChildren: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *children_.scene_object_children_);
      break;
    }
    // .e8.SceneObjectProto.SceneEntityChildren scene_entity_children = 5;
    case kSceneEntityChildren: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *children_.scene_entity_children_);
      break;
    }
    case CHILDREN_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SceneObjectProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneObjectProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SceneObjectProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SceneObjectProto)
    MergeFrom(*source);
  }
}

void SceneObjectProto::MergeFrom(const SceneObjectProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SceneObjectProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.procedural_object_id() != 0) {
    _internal_set_procedural_object_id(from._internal_procedural_object_id());
  }
  switch (from.children_case()) {
    case kSceneObjectChildren: {
      _internal_mutable_scene_object_children()->::e8::SceneObjectProto_SceneObjectChildren::MergeFrom(from._internal_scene_object_children());
      break;
    }
    case kSceneEntityChildren: {
      _internal_mutable_scene_entity_children()->::e8::SceneObjectProto_SceneEntityChildren::MergeFrom(from._internal_scene_entity_children());
      break;
    }
    case CHILDREN_NOT_SET: {
      break;
    }
  }
}

void SceneObjectProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SceneObjectProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectProto::CopyFrom(const SceneObjectProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SceneObjectProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectProto::IsInitialized() const {
  return true;
}

void SceneObjectProto::InternalSwap(SceneObjectProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SceneObjectProto, procedural_object_id_)
      + sizeof(SceneObjectProto::procedural_object_id_)
      - PROTOBUF_FIELD_OFFSET(SceneObjectProto, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
  swap(children_, other->children_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneObjectProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SceneObjectCollection::InitAsDefaultInstance() {
}
class SceneObjectCollection::_Internal {
 public:
};

SceneObjectCollection::SceneObjectCollection(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scene_objects_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.SceneObjectCollection)
}
SceneObjectCollection::SceneObjectCollection(const SceneObjectCollection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scene_objects_(from.scene_objects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SceneObjectCollection)
}

void SceneObjectCollection::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SceneObjectCollection_scene_5fobject_2eproto.base);
}

SceneObjectCollection::~SceneObjectCollection() {
  // @@protoc_insertion_point(destructor:e8.SceneObjectCollection)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SceneObjectCollection::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SceneObjectCollection::ArenaDtor(void* object) {
  SceneObjectCollection* _this = reinterpret_cast< SceneObjectCollection* >(object);
  (void)_this;
}
void SceneObjectCollection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneObjectCollection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SceneObjectCollection& SceneObjectCollection::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SceneObjectCollection_scene_5fobject_2eproto.base);
  return *internal_default_instance();
}


void SceneObjectCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SceneObjectCollection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_objects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneObjectCollection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .e8.SceneObjectProto scene_objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scene_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SceneObjectCollection::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.SceneObjectCollection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.SceneObjectProto scene_objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scene_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_scene_objects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SceneObjectCollection)
  return target;
}

size_t SceneObjectCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SceneObjectCollection)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .e8.SceneObjectProto scene_objects = 1;
  total_size += 1UL * this->_internal_scene_objects_size();
  for (const auto& msg : this->scene_objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectCollection::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SceneObjectCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectCollection* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SceneObjectCollection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SceneObjectCollection)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SceneObjectCollection)
    MergeFrom(*source);
  }
}

void SceneObjectCollection::MergeFrom(const SceneObjectCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SceneObjectCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_objects_.MergeFrom(from.scene_objects_);
}

void SceneObjectCollection::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SceneObjectCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectCollection::CopyFrom(const SceneObjectCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SceneObjectCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectCollection::IsInitialized() const {
  return true;
}

void SceneObjectCollection::InternalSwap(SceneObjectCollection* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scene_objects_.InternalSwap(&other->scene_objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneObjectCollection::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::e8::SceneObjectProto_SceneObjectChildren* Arena::CreateMaybeMessage< ::e8::SceneObjectProto_SceneObjectChildren >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::SceneObjectProto_SceneObjectChildren >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::SceneObjectProto_SceneEntityChildren* Arena::CreateMaybeMessage< ::e8::SceneObjectProto_SceneEntityChildren >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::SceneObjectProto_SceneEntityChildren >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::SceneObjectProto* Arena::CreateMaybeMessage< ::e8::SceneObjectProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::SceneObjectProto >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::SceneObjectCollection* Arena::CreateMaybeMessage< ::e8::SceneObjectCollection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::SceneObjectCollection >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
