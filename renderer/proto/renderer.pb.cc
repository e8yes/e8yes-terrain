// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: renderer.proto

#include "renderer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_renderer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DepthRendererParameters_renderer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_renderer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RadianceRendererParameters_renderer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_renderer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RadiosityRendererParameters_renderer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_renderer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SolidColorRendererParameters_renderer_2eproto;
namespace e8 {
class SolidColorRendererParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SolidColorRendererParameters> _instance;
} _SolidColorRendererParameters_default_instance_;
class DepthRendererParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DepthRendererParameters> _instance;
} _DepthRendererParameters_default_instance_;
class RadianceRendererParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RadianceRendererParameters> _instance;
} _RadianceRendererParameters_default_instance_;
class RadiosityRendererParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RadiosityRendererParameters> _instance;
} _RadiosityRendererParameters_default_instance_;
class RendererConfigurationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererConfiguration> _instance;
} _RendererConfiguration_default_instance_;
}  // namespace e8
static void InitDefaultsscc_info_DepthRendererParameters_renderer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_DepthRendererParameters_default_instance_;
    new (ptr) ::e8::DepthRendererParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::DepthRendererParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DepthRendererParameters_renderer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DepthRendererParameters_renderer_2eproto}, {}};

static void InitDefaultsscc_info_RadianceRendererParameters_renderer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RadianceRendererParameters_default_instance_;
    new (ptr) ::e8::RadianceRendererParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RadianceRendererParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RadianceRendererParameters_renderer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RadianceRendererParameters_renderer_2eproto}, {}};

static void InitDefaultsscc_info_RadiosityRendererParameters_renderer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RadiosityRendererParameters_default_instance_;
    new (ptr) ::e8::RadiosityRendererParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RadiosityRendererParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RadiosityRendererParameters_renderer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RadiosityRendererParameters_renderer_2eproto}, {}};

static void InitDefaultsscc_info_RendererConfiguration_renderer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RendererConfiguration_default_instance_;
    new (ptr) ::e8::RendererConfiguration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RendererConfiguration::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_RendererConfiguration_renderer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_RendererConfiguration_renderer_2eproto}, {
      &scc_info_SolidColorRendererParameters_renderer_2eproto.base,
      &scc_info_DepthRendererParameters_renderer_2eproto.base,
      &scc_info_RadianceRendererParameters_renderer_2eproto.base,
      &scc_info_RadiosityRendererParameters_renderer_2eproto.base,}};

static void InitDefaultsscc_info_SolidColorRendererParameters_renderer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SolidColorRendererParameters_default_instance_;
    new (ptr) ::e8::SolidColorRendererParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SolidColorRendererParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SolidColorRendererParameters_renderer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SolidColorRendererParameters_renderer_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_renderer_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_renderer_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_renderer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_renderer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::SolidColorRendererParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::DepthRendererParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::DepthRendererParameters, alpha_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::RadianceRendererParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::RadiosityRendererParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, in_use_renderer_type_),
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, solid_color_renderer_params_),
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, depth_renderer_params_),
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, radiance_renderer_params_),
  PROTOBUF_FIELD_OFFSET(::e8::RendererConfiguration, radiosity_renderer_params_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::SolidColorRendererParameters)},
  { 5, -1, sizeof(::e8::DepthRendererParameters)},
  { 11, -1, sizeof(::e8::RadianceRendererParameters)},
  { 16, -1, sizeof(::e8::RadiosityRendererParameters)},
  { 21, -1, sizeof(::e8::RendererConfiguration)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_SolidColorRendererParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_DepthRendererParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_RadianceRendererParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_RadiosityRendererParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::e8::_RendererConfiguration_default_instance_),
};

const char descriptor_table_protodef_renderer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016renderer.proto\022\002e8\"\036\n\034SolidColorRender"
  "erParameters\"(\n\027DepthRendererParameters\022"
  "\r\n\005alpha\030\001 \001(\002\"\034\n\032RadianceRendererParame"
  "ters\"\035\n\033RadiosityRendererParameters\"\320\002\n\025"
  "RendererConfiguration\022.\n\024in_use_renderer"
  "_type\030\001 \001(\0162\020.e8.RendererType\022E\n\033solid_c"
  "olor_renderer_params\030\002 \001(\0132 .e8.SolidCol"
  "orRendererParameters\022:\n\025depth_renderer_p"
  "arams\030\003 \001(\0132\033.e8.DepthRendererParameters"
  "\022@\n\030radiance_renderer_params\030\004 \001(\0132\036.e8."
  "RadianceRendererParameters\022B\n\031radiosity_"
  "renderer_params\030\005 \001(\0132\037.e8.RadiosityRend"
  "ererParameters*c\n\014RendererType\022\016\n\nRT_INV"
  "ALID\020\000\022\022\n\016RT_SOLID_COLOR\020\001\022\014\n\010RT_DEPTH\020\002"
  "\022\017\n\013RT_RADIANCE\020\003\022\020\n\014RT_RADIOSITY\020\004b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_renderer_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_renderer_2eproto_sccs[5] = {
  &scc_info_DepthRendererParameters_renderer_2eproto.base,
  &scc_info_RadianceRendererParameters_renderer_2eproto.base,
  &scc_info_RadiosityRendererParameters_renderer_2eproto.base,
  &scc_info_RendererConfiguration_renderer_2eproto.base,
  &scc_info_SolidColorRendererParameters_renderer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_renderer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_renderer_2eproto = {
  false, false, descriptor_table_protodef_renderer_2eproto, "renderer.proto", 603,
  &descriptor_table_renderer_2eproto_once, descriptor_table_renderer_2eproto_sccs, descriptor_table_renderer_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_renderer_2eproto::offsets,
  file_level_metadata_renderer_2eproto, 5, file_level_enum_descriptors_renderer_2eproto, file_level_service_descriptors_renderer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_renderer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_renderer_2eproto)), true);
namespace e8 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_renderer_2eproto);
  return file_level_enum_descriptors_renderer_2eproto[0];
}
bool RendererType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SolidColorRendererParameters::InitAsDefaultInstance() {
}
class SolidColorRendererParameters::_Internal {
 public:
};

SolidColorRendererParameters::SolidColorRendererParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.SolidColorRendererParameters)
}
SolidColorRendererParameters::SolidColorRendererParameters(const SolidColorRendererParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SolidColorRendererParameters)
}

void SolidColorRendererParameters::SharedCtor() {
}

SolidColorRendererParameters::~SolidColorRendererParameters() {
  // @@protoc_insertion_point(destructor:e8.SolidColorRendererParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SolidColorRendererParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SolidColorRendererParameters::ArenaDtor(void* object) {
  SolidColorRendererParameters* _this = reinterpret_cast< SolidColorRendererParameters* >(object);
  (void)_this;
}
void SolidColorRendererParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SolidColorRendererParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SolidColorRendererParameters& SolidColorRendererParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SolidColorRendererParameters_renderer_2eproto.base);
  return *internal_default_instance();
}


void SolidColorRendererParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SolidColorRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SolidColorRendererParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SolidColorRendererParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.SolidColorRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SolidColorRendererParameters)
  return target;
}

size_t SolidColorRendererParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SolidColorRendererParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolidColorRendererParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SolidColorRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const SolidColorRendererParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SolidColorRendererParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SolidColorRendererParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SolidColorRendererParameters)
    MergeFrom(*source);
  }
}

void SolidColorRendererParameters::MergeFrom(const SolidColorRendererParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SolidColorRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SolidColorRendererParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SolidColorRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolidColorRendererParameters::CopyFrom(const SolidColorRendererParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SolidColorRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolidColorRendererParameters::IsInitialized() const {
  return true;
}

void SolidColorRendererParameters::InternalSwap(SolidColorRendererParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SolidColorRendererParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DepthRendererParameters::InitAsDefaultInstance() {
}
class DepthRendererParameters::_Internal {
 public:
};

DepthRendererParameters::DepthRendererParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.DepthRendererParameters)
}
DepthRendererParameters::DepthRendererParameters(const DepthRendererParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  alpha_ = from.alpha_;
  // @@protoc_insertion_point(copy_constructor:e8.DepthRendererParameters)
}

void DepthRendererParameters::SharedCtor() {
  alpha_ = 0;
}

DepthRendererParameters::~DepthRendererParameters() {
  // @@protoc_insertion_point(destructor:e8.DepthRendererParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DepthRendererParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DepthRendererParameters::ArenaDtor(void* object) {
  DepthRendererParameters* _this = reinterpret_cast< DepthRendererParameters* >(object);
  (void)_this;
}
void DepthRendererParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DepthRendererParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DepthRendererParameters& DepthRendererParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DepthRendererParameters_renderer_2eproto.base);
  return *internal_default_instance();
}


void DepthRendererParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.DepthRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alpha_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DepthRendererParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          alpha_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DepthRendererParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.DepthRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float alpha = 1;
  if (!(this->alpha() <= 0 && this->alpha() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_alpha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.DepthRendererParameters)
  return target;
}

size_t DepthRendererParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.DepthRendererParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float alpha = 1;
  if (!(this->alpha() <= 0 && this->alpha() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DepthRendererParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.DepthRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const DepthRendererParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DepthRendererParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.DepthRendererParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.DepthRendererParameters)
    MergeFrom(*source);
  }
}

void DepthRendererParameters::MergeFrom(const DepthRendererParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.DepthRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.alpha() <= 0 && from.alpha() >= 0)) {
    _internal_set_alpha(from._internal_alpha());
  }
}

void DepthRendererParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.DepthRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepthRendererParameters::CopyFrom(const DepthRendererParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.DepthRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepthRendererParameters::IsInitialized() const {
  return true;
}

void DepthRendererParameters::InternalSwap(DepthRendererParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DepthRendererParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RadianceRendererParameters::InitAsDefaultInstance() {
}
class RadianceRendererParameters::_Internal {
 public:
};

RadianceRendererParameters::RadianceRendererParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.RadianceRendererParameters)
}
RadianceRendererParameters::RadianceRendererParameters(const RadianceRendererParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.RadianceRendererParameters)
}

void RadianceRendererParameters::SharedCtor() {
}

RadianceRendererParameters::~RadianceRendererParameters() {
  // @@protoc_insertion_point(destructor:e8.RadianceRendererParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RadianceRendererParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RadianceRendererParameters::ArenaDtor(void* object) {
  RadianceRendererParameters* _this = reinterpret_cast< RadianceRendererParameters* >(object);
  (void)_this;
}
void RadianceRendererParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RadianceRendererParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RadianceRendererParameters& RadianceRendererParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RadianceRendererParameters_renderer_2eproto.base);
  return *internal_default_instance();
}


void RadianceRendererParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RadianceRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RadianceRendererParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RadianceRendererParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.RadianceRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RadianceRendererParameters)
  return target;
}

size_t RadianceRendererParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RadianceRendererParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadianceRendererParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RadianceRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RadianceRendererParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RadianceRendererParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RadianceRendererParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RadianceRendererParameters)
    MergeFrom(*source);
  }
}

void RadianceRendererParameters::MergeFrom(const RadianceRendererParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RadianceRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RadianceRendererParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RadianceRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadianceRendererParameters::CopyFrom(const RadianceRendererParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RadianceRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadianceRendererParameters::IsInitialized() const {
  return true;
}

void RadianceRendererParameters::InternalSwap(RadianceRendererParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RadianceRendererParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RadiosityRendererParameters::InitAsDefaultInstance() {
}
class RadiosityRendererParameters::_Internal {
 public:
};

RadiosityRendererParameters::RadiosityRendererParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.RadiosityRendererParameters)
}
RadiosityRendererParameters::RadiosityRendererParameters(const RadiosityRendererParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.RadiosityRendererParameters)
}

void RadiosityRendererParameters::SharedCtor() {
}

RadiosityRendererParameters::~RadiosityRendererParameters() {
  // @@protoc_insertion_point(destructor:e8.RadiosityRendererParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RadiosityRendererParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RadiosityRendererParameters::ArenaDtor(void* object) {
  RadiosityRendererParameters* _this = reinterpret_cast< RadiosityRendererParameters* >(object);
  (void)_this;
}
void RadiosityRendererParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RadiosityRendererParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RadiosityRendererParameters& RadiosityRendererParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RadiosityRendererParameters_renderer_2eproto.base);
  return *internal_default_instance();
}


void RadiosityRendererParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RadiosityRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RadiosityRendererParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RadiosityRendererParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.RadiosityRendererParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RadiosityRendererParameters)
  return target;
}

size_t RadiosityRendererParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RadiosityRendererParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadiosityRendererParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RadiosityRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const RadiosityRendererParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RadiosityRendererParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RadiosityRendererParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RadiosityRendererParameters)
    MergeFrom(*source);
  }
}

void RadiosityRendererParameters::MergeFrom(const RadiosityRendererParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RadiosityRendererParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RadiosityRendererParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RadiosityRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadiosityRendererParameters::CopyFrom(const RadiosityRendererParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RadiosityRendererParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadiosityRendererParameters::IsInitialized() const {
  return true;
}

void RadiosityRendererParameters::InternalSwap(RadiosityRendererParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RadiosityRendererParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererConfiguration::InitAsDefaultInstance() {
  ::e8::_RendererConfiguration_default_instance_._instance.get_mutable()->solid_color_renderer_params_ = const_cast< ::e8::SolidColorRendererParameters*>(
      ::e8::SolidColorRendererParameters::internal_default_instance());
  ::e8::_RendererConfiguration_default_instance_._instance.get_mutable()->depth_renderer_params_ = const_cast< ::e8::DepthRendererParameters*>(
      ::e8::DepthRendererParameters::internal_default_instance());
  ::e8::_RendererConfiguration_default_instance_._instance.get_mutable()->radiance_renderer_params_ = const_cast< ::e8::RadianceRendererParameters*>(
      ::e8::RadianceRendererParameters::internal_default_instance());
  ::e8::_RendererConfiguration_default_instance_._instance.get_mutable()->radiosity_renderer_params_ = const_cast< ::e8::RadiosityRendererParameters*>(
      ::e8::RadiosityRendererParameters::internal_default_instance());
}
class RendererConfiguration::_Internal {
 public:
  static const ::e8::SolidColorRendererParameters& solid_color_renderer_params(const RendererConfiguration* msg);
  static const ::e8::DepthRendererParameters& depth_renderer_params(const RendererConfiguration* msg);
  static const ::e8::RadianceRendererParameters& radiance_renderer_params(const RendererConfiguration* msg);
  static const ::e8::RadiosityRendererParameters& radiosity_renderer_params(const RendererConfiguration* msg);
};

const ::e8::SolidColorRendererParameters&
RendererConfiguration::_Internal::solid_color_renderer_params(const RendererConfiguration* msg) {
  return *msg->solid_color_renderer_params_;
}
const ::e8::DepthRendererParameters&
RendererConfiguration::_Internal::depth_renderer_params(const RendererConfiguration* msg) {
  return *msg->depth_renderer_params_;
}
const ::e8::RadianceRendererParameters&
RendererConfiguration::_Internal::radiance_renderer_params(const RendererConfiguration* msg) {
  return *msg->radiance_renderer_params_;
}
const ::e8::RadiosityRendererParameters&
RendererConfiguration::_Internal::radiosity_renderer_params(const RendererConfiguration* msg) {
  return *msg->radiosity_renderer_params_;
}
RendererConfiguration::RendererConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:e8.RendererConfiguration)
}
RendererConfiguration::RendererConfiguration(const RendererConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_solid_color_renderer_params()) {
    solid_color_renderer_params_ = new ::e8::SolidColorRendererParameters(*from.solid_color_renderer_params_);
  } else {
    solid_color_renderer_params_ = nullptr;
  }
  if (from._internal_has_depth_renderer_params()) {
    depth_renderer_params_ = new ::e8::DepthRendererParameters(*from.depth_renderer_params_);
  } else {
    depth_renderer_params_ = nullptr;
  }
  if (from._internal_has_radiance_renderer_params()) {
    radiance_renderer_params_ = new ::e8::RadianceRendererParameters(*from.radiance_renderer_params_);
  } else {
    radiance_renderer_params_ = nullptr;
  }
  if (from._internal_has_radiosity_renderer_params()) {
    radiosity_renderer_params_ = new ::e8::RadiosityRendererParameters(*from.radiosity_renderer_params_);
  } else {
    radiosity_renderer_params_ = nullptr;
  }
  in_use_renderer_type_ = from.in_use_renderer_type_;
  // @@protoc_insertion_point(copy_constructor:e8.RendererConfiguration)
}

void RendererConfiguration::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererConfiguration_renderer_2eproto.base);
  ::memset(&solid_color_renderer_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_use_renderer_type_) -
      reinterpret_cast<char*>(&solid_color_renderer_params_)) + sizeof(in_use_renderer_type_));
}

RendererConfiguration::~RendererConfiguration() {
  // @@protoc_insertion_point(destructor:e8.RendererConfiguration)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete solid_color_renderer_params_;
  if (this != internal_default_instance()) delete depth_renderer_params_;
  if (this != internal_default_instance()) delete radiance_renderer_params_;
  if (this != internal_default_instance()) delete radiosity_renderer_params_;
}

void RendererConfiguration::ArenaDtor(void* object) {
  RendererConfiguration* _this = reinterpret_cast< RendererConfiguration* >(object);
  (void)_this;
}
void RendererConfiguration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererConfiguration& RendererConfiguration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererConfiguration_renderer_2eproto.base);
  return *internal_default_instance();
}


void RendererConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RendererConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && solid_color_renderer_params_ != nullptr) {
    delete solid_color_renderer_params_;
  }
  solid_color_renderer_params_ = nullptr;
  if (GetArena() == nullptr && depth_renderer_params_ != nullptr) {
    delete depth_renderer_params_;
  }
  depth_renderer_params_ = nullptr;
  if (GetArena() == nullptr && radiance_renderer_params_ != nullptr) {
    delete radiance_renderer_params_;
  }
  radiance_renderer_params_ = nullptr;
  if (GetArena() == nullptr && radiosity_renderer_params_ != nullptr) {
    delete radiosity_renderer_params_;
  }
  radiosity_renderer_params_ = nullptr;
  in_use_renderer_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererConfiguration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .e8.RendererType in_use_renderer_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_in_use_renderer_type(static_cast<::e8::RendererType>(val));
        } else goto handle_unusual;
        continue;
      // .e8.SolidColorRendererParameters solid_color_renderer_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_solid_color_renderer_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .e8.DepthRendererParameters depth_renderer_params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_depth_renderer_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .e8.RadianceRendererParameters radiance_renderer_params = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_radiance_renderer_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .e8.RadiosityRendererParameters radiosity_renderer_params = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_radiosity_renderer_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererConfiguration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:e8.RendererConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RendererType in_use_renderer_type = 1;
  if (this->in_use_renderer_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_in_use_renderer_type(), target);
  }

  // .e8.SolidColorRendererParameters solid_color_renderer_params = 2;
  if (this->has_solid_color_renderer_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::solid_color_renderer_params(this), target, stream);
  }

  // .e8.DepthRendererParameters depth_renderer_params = 3;
  if (this->has_depth_renderer_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::depth_renderer_params(this), target, stream);
  }

  // .e8.RadianceRendererParameters radiance_renderer_params = 4;
  if (this->has_radiance_renderer_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::radiance_renderer_params(this), target, stream);
  }

  // .e8.RadiosityRendererParameters radiosity_renderer_params = 5;
  if (this->has_radiosity_renderer_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::radiosity_renderer_params(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RendererConfiguration)
  return target;
}

size_t RendererConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RendererConfiguration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .e8.SolidColorRendererParameters solid_color_renderer_params = 2;
  if (this->has_solid_color_renderer_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *solid_color_renderer_params_);
  }

  // .e8.DepthRendererParameters depth_renderer_params = 3;
  if (this->has_depth_renderer_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *depth_renderer_params_);
  }

  // .e8.RadianceRendererParameters radiance_renderer_params = 4;
  if (this->has_radiance_renderer_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *radiance_renderer_params_);
  }

  // .e8.RadiosityRendererParameters radiosity_renderer_params = 5;
  if (this->has_radiosity_renderer_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *radiosity_renderer_params_);
  }

  // .e8.RendererType in_use_renderer_type = 1;
  if (this->in_use_renderer_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_in_use_renderer_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererConfiguration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RendererConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererConfiguration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RendererConfiguration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RendererConfiguration)
    MergeFrom(*source);
  }
}

void RendererConfiguration::MergeFrom(const RendererConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RendererConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_solid_color_renderer_params()) {
    _internal_mutable_solid_color_renderer_params()->::e8::SolidColorRendererParameters::MergeFrom(from._internal_solid_color_renderer_params());
  }
  if (from.has_depth_renderer_params()) {
    _internal_mutable_depth_renderer_params()->::e8::DepthRendererParameters::MergeFrom(from._internal_depth_renderer_params());
  }
  if (from.has_radiance_renderer_params()) {
    _internal_mutable_radiance_renderer_params()->::e8::RadianceRendererParameters::MergeFrom(from._internal_radiance_renderer_params());
  }
  if (from.has_radiosity_renderer_params()) {
    _internal_mutable_radiosity_renderer_params()->::e8::RadiosityRendererParameters::MergeFrom(from._internal_radiosity_renderer_params());
  }
  if (from.in_use_renderer_type() != 0) {
    _internal_set_in_use_renderer_type(from._internal_in_use_renderer_type());
  }
}

void RendererConfiguration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RendererConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererConfiguration::CopyFrom(const RendererConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RendererConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererConfiguration::IsInitialized() const {
  return true;
}

void RendererConfiguration::InternalSwap(RendererConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererConfiguration, in_use_renderer_type_)
      + sizeof(RendererConfiguration::in_use_renderer_type_)
      - PROTOBUF_FIELD_OFFSET(RendererConfiguration, solid_color_renderer_params_)>(
          reinterpret_cast<char*>(&solid_color_renderer_params_),
          reinterpret_cast<char*>(&other->solid_color_renderer_params_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererConfiguration::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::e8::SolidColorRendererParameters* Arena::CreateMaybeMessage< ::e8::SolidColorRendererParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::SolidColorRendererParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::DepthRendererParameters* Arena::CreateMaybeMessage< ::e8::DepthRendererParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::DepthRendererParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::RadianceRendererParameters* Arena::CreateMaybeMessage< ::e8::RadianceRendererParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::RadianceRendererParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::RadiosityRendererParameters* Arena::CreateMaybeMessage< ::e8::RadiosityRendererParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::RadiosityRendererParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::e8::RendererConfiguration* Arena::CreateMaybeMessage< ::e8::RendererConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::e8::RendererConfiguration >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
